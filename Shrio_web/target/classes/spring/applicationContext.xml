<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
        xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/util 
         http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扫描有注解的文件 base-package 包路径 -->
    <context:component-scan base-package="com.yrg.shiro">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<!-- 创建shiro的filter对象
	配置securityManager
	loginUrl:设置登录页面
	unauthorizedUrl：未认证的跳转页面
	过滤器链：从上向下执行
		/login.html = anon 不需要验证可以直接返回
		/subLogin = anon	不需要验证可以直接返回
		/*=	authc：经过认证后才能访问相应的路径 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="login.html"></property>
		<property name="unauthorizedUrl" value="403.html"></property>
		<property name="filterChainDefinitions">
			<value>
				/login.html = anon
				/subLogin = anon
				<!-- /testRole = roles["admin"]
				/testRole1 = roles["admin","admin1"]
				/testPerms = perms["user:delete"]
				/testPerms1 = perms["user:delete",""user:update"] -->
				
				/testRole =roles["admin","admin1"]
				/testRole1 = rolesOr["admin","admin1"]
				/* = authc
			</value>
		</property>
		<property name="filters">
			<util:map>
				<entry key="rolesOr" value-ref="rolesOrFilter"></entry>
			</util:map>
		</property>
	</bean>
	
	<!-- 创建自定义的filter -->
	<bean class="com.yrg.shiro.filter.RolesOrFilter" id="rolesOrFilter"></bean>
	

		
	
	<!-- 	创建SecurityManager对象 
			将realm对象设置到环境中	
	-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm"></property>
		<property name="sessionManager" ref="sessionManager"></property>
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="rememberMeManager" ref="cookieRememberMeManager"></property>
	</bean>
    
   <!--  创建realm对象 -->
    <bean id = "realm" class="com.yrg.shiro.realm.CustomRealm2">
    	<property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>
    
    <!-- 创建加密对象 -->
 	<bean id = "credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
 		<property name="hashAlgorithmName" value="md5"></property>
 		<property name="hashIterations" value="1"></property>
 	</bean>
 	
		<!-- <bean class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager" id="sessionManager">
			<property name="sessionDAO" ref="redisSessionDao"></property>
		</bean> -->
		<bean class="com.yrg.shiro.session.CustomSessionManager" id="sessionManager">
			<property name="sessionDAO" ref="redisSessionDao"></property>
		</bean>
		
		<bean class="com.yrg.shiro.session.RedisSessionDao" id="redisSessionDao"></bean>
	
	
		<bean class="com.yrg.shiro.cache.RedisCacheManager" id="cacheManager"></bean>

		<bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
			<property name="cookie" ref="cookie"></property>
		</bean>
	
		<bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie">
			<constructor-arg value="rememberMe"></constructor-arg>
			<property name="maxAge" value="600"></property>
		</bean>
</beans>